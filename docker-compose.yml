services:
  grafana:
    image: grafana/grafana-oss:latest
    environment:
      GF_ENABLE_GZIP: "true"
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    labels:
      traefik.http.routers.grafana-router.rule: Host(`grafana`)
      traefik.http.routers.grafana-router.tls: "true"
      traefik.http.services.grafana-service.loadbalancer.server.port: "3000"
    volumes:
      - ${USERPROFILE}\grafana-data\:/var/lib/grafana/:rw

  identityserver:
    image: eassbhhtgu/identity-server:latest
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      HTTP_PORTS: "80"
      Kestrel:Certificates:Default:KeyPath: /etc/certs/localhost.key
      Kestrel:Certificates:Default:Path: /etc/certs/localhost.crt

      ApiScopes:0:Name: scope1
      Clients:0:AllowedGrantTypes:0: client_credentials
      Clients:0:AllowedScopes:0: scope1
      Clients:0:ClientId: client1
      Clients:0:ClientSecrets:0:Value: WxFhjC5EAnh30M0JIe0Wa58Xb1BYf8kedTTdKUbbd9Y=
    labels:
      traefik.http.routers.identityserver-router.rule: Host(`identityserver`)
      traefik.http.routers.identityserver-router.tls: "true"
      traefik.http.services.identityserver-service.loadbalancer.server.port: "80"
    secrets:
      - source: localhost_crt
        target: /etc/certs/localhost.crt
      - source: localhost_key
        target: /etc/certs/localhost.key

  networkdiscovery:
    image: eassbhhtgu/networkdiscoveryapi:latest
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      Aliases:keylight: 3c6a9d14d765
      Aliases:lightstrip: 3c6a9d187071
      Aliases:vr front: 28ee52eb0aa4
      Aliases:vr rear: 003192e1a474
      Aliases:philipshue: ecb5fa18e324
      Aliases:philipshuebridge: ecb5fa18e324
      Aliases:globalcache: 000c1e059cad
      Aliases:irblaster: 000c1e059cad
      Router:Host: 192.168.1.10
      Router:PathToPrivateKey: /run/secrets/id_rsa
      Router:Port: 22
      Router:Username: root
    labels:
      traefik.http.routers.networkdiscovery-router.rule: Host(`networkdiscovery`)
      traefik.http.routers.networkdiscovery-router.tls: "true"
      traefik.http.services.networkdiscovery-service.loadbalancer.server.port: "8080"
    secrets:
    - source: id_rsa

  nuget:
    image: bagetter/bagetter:latest
    environment:
      ApiKey: ${NuGetServerApiKey:-8e7b324ee43b689f77c2f95b099fd6f5}
    labels:
      traefik.http.routers.nuget-router.rule: Host(`baget`) || Host(`nuget`)
      traefik.http.routers.nuget-router.tls: "true"
      traefik.http.services.nuget-service.loadbalancer.server.port: "8080"
    volumes:
      - ${USERPROFILE}\bagetter-data:/data:rw

  pihole:
    image: pihole/pihole:latest
    dns:
      - 127.0.0.1
      - 9.9.9.9
      - 9.9.9.10
    environment:
      DNS1: 9.9.9.9
      DNS2: 9.9.9.10
      TZ: UTC
      WEBPASSWORD: ${PIHOLE_WEB_PASSWORD:-76c9eca2bced3e751a47c188afe6fd9d}
    labels:
      traefik.http.routers.pihole-router.rule: Host(`pihole`)
      traefik.http.routers.pihole-router.tls: "true"
      traefik.http.services.pihole-service.loadbalancer.server.port: "80"
    ports:
      - 53:53/tcp
      - 53:53/udp
      - 67:67/udp
    volumes:
      - ${USERPROFILE}\pihole-data\data\:/etc/pihole/:rw
      - ${USERPROFILE}\pihole-data\dnsmasq\:/etc/dnsmasq.d/:rw

  pihole-exporter:
    image: ekofr/pihole-exporter:latest
    healthcheck:
      test:
        - CMD
        - wget
        - --tries=1
        - --spider
        - http://localhost:9617/metrics
    environment:
      INTERVAL: 90s
      PIHOLE_HOSTNAME: pihole
      PIHOLE_PASSWORD: ${PIHOLE_WEB_PASSWORD:-76c9eca2bced3e751a47c188afe6fd9d}
      PORT: "9617"

  planka:
    image: ghcr.io/plankanban/planka:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    environment:
      BASE_URL: https://planka
      DATABASE_URL: postgresql://postgres@planka-db/planka
      SECRET_KEY: ${PLANKA_DB_PASSWORD:-c1ce607f5d65cbb3c68092651627426b}
      DEFAULT_ADMIN_EMAIL: demo@demo.demo # Do not remove if you want to prevent this user from being edited/deleted
      DEFAULT_ADMIN_NAME: Demo Demo
      DEFAULT_ADMIN_PASSWORD: demo
      DEFAULT_ADMIN_USERNAME: demo
    labels:
      traefik.http.routers.planka-router.rule: Host(`planka`)
      traefik.http.routers.planka-router.tls: "true"
      traefik.http.services.planka-service.loadbalancer.server.port: "1337"
    volumes:
      - ${USERPROFILE}\planka-data\user-avatars:/app/public/user-avatars:rw
      - ${USERPROFILE}\planka-data\project-background-images:/app/public/project-background-images:rw
      - ${USERPROFILE}\planka-data\attachments:/app/private/attachments:rw

  planka-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: planka
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d planka
      timeout: 5s
      interval: 10s
      retries: 5
    volumes:
      - ${USERPROFILE}\planka-data\db:/var/lib/postgresql/data:rw

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    labels:
      traefik.http.routers.prometheus-router.rule: Host(`prometheus`)
      traefik.http.routers.prometheus-router.tls: "true"
      traefik.http.services.prometheus-service.loadbalancer.server.port: "9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  tplink:
    image: eassbhhtgu/tplinkrelayapi:latest
    entrypoint: bash -c "/usr/sbin/update-ca-certificates && dotnet TPLinkRelayApi.Api.dll"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      EndPoints:NetworkDiscovery: http://networkdiscovery:8080/
    labels:
      traefik.http.routers.tplink-router.rule: Host(`tplink`)
      traefik.http.routers.tplink-router.tls: "true"
      traefik.http.services.tplink-service.loadbalancer.server.port: "8080"
    secrets:
      - source: ca_crt
        target: /usr/local/share/ca-certificates/ca.crt

  traefik:
    image: traefik:latest
    command:
      - --api.insecure=true
      - --entrypoints.websecure.address=:443
      - --metrics.prometheus=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addrouterslabels=true
      - --metrics.prometheus.addserviceslabels=true
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dynamic_conf/
    labels:
      traefik.http.routers.traefik-router.rule: Host(`traefik`)
      traefik.http.routers.traefik-router.tls: "true"
      traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
    ports:
      - 443:443/tcp
    secrets:
      - source: localhost_crt
        target: /etc/certs/localhost.crt
      - source: localhost_key
        target: /etc/certs/localhost.key
    volumes:
      - ./traefik.yml:/etc/traefik/dynamic_conf/conf.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock

secrets:
  id_rsa:
    file: ${USERPROFILE}\.ssh\id_rsa
  localhost_crt:
    file: ${USERPROFILE}\.aspnet\https\localhost.crt
  localhost_key:
    file: ${USERPROFILE}\.aspnet\https\localhost.key
