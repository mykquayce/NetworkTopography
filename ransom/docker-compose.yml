services:
  asndenier:
    image: eassbhhtgu/asndenier:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    environment:
      DOTNET_ENVIRONMENT: Production

      #ASNNumbers:amazon:0: 7224
      #ASNNumbers:amazon:1: 8987
      #ASNNumbers:amazon:2: 14618
      #ASNNumbers:amazon:3: 16509
      #ASNNumbers:amazon:4: 62785

      ASNNumbers:apple:0: 714
      ASNNumbers:apple:1: 6185

      ASNNumbers:disney:0: 8137
      ASNNumbers:disney:1: 11251
      ASNNumbers:disney:2: 22604
      ASNNumbers:disney:3: 23344
      ASNNumbers:disney:4: 29736
      ASNNumbers:disney:5: 398849

      ASNNumbers:epicgames:0: 4356
      ASNNumbers:epicgames:1: 395701
      ASNNumbers:epicgames:2: 397645

      ASNNumbers:facebook:0: 32934
      ASNNumbers:facebook:1: 54115
      ASNNumbers:facebook:2: 63293

      ASNNumbers:king:0: 62094

      ASNNumbers:netease:0: 45062
      ASNNumbers:netease:1: 131659
      ASNNumbers:netease:2: 137263

      ASNNumbers:netflix:0: 2906
      ASNNumbers:netflix:1: 40027
      ASNNumbers:netflix:2: 55095

      ASNNumbers:sky:0: 5607
      ASNNumbers:sky:1: 7922
      ASNNumbers:sky:2: 39627
      ASNNumbers:sky:3: 41012
      ASNNumbers:sky:4: 207163
      ASNNumbers:sky:5: 212465

      ASNNumbers:tencent:0: 45090

      ASNNumbers:tiktok:0: 138699
      ASNNumbers:tiktok:1: 396986

      #ASNNumbers:twitch:0: 46489

      ASNNumbers:twitter:0: 13414
      ASNNumbers:twitter:1: 35995
      ASNNumbers:twitter:2: 63179
      ASNNumbers:twitter:3: 63194

      ASNNumbers:whatsapp:0: 11917

      Schedule: 0 */6 * * *

      Router:Host: 192.168.1.1
      Router:Port: "22"
      Router:UserName: root
      Router:PathToPrivateKey: /run/secrets/id_rsa

    secrets:
    - source: id_rsa

  changedetection:
    image: dgtlmoon/changedetection.io:latest
    labels:
      traefik.http.routers.changedetection-router.entrypoints: websecure
      traefik.http.routers.changedetection-router.rule: Host(`changedetection.bob.house`)
      traefik.http.routers.changedetection-router.tls: "true"
      traefik.http.services.changedetection-service.loadbalancer.server.port: "5000"
    volumes:
      - ~/.changedetection/:/datastore/:rw

  donetick:
    image: donetick/donetick:latest
    environment:
      DT_ENV: selfhosted
      DT_SQLITE_PATH: /donetick-data/donetick.db
    labels:
      traefik.http.routers.donetick-router.entrypoints: websecure
      traefik.http.routers.donetick-router.rule: Host(`donetick.bob.house`)
      traefik.http.routers.donetick-router.tls: "true"
      traefik.http.services.donetick-service.loadbalancer.server.port: "2021"
    volumes:
      - ~/.donetick/:/donetick-data/:rw
      - ./donetick/selfhosted.yaml:/config/selfhosted.yaml:ro

  dozzle:
    image: amir20/dozzle:latest
    command: agent
    environment:
      DOZZLE_HOSTNAME: ransom
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 5s
      retries: 5
      start_period: 5s
      start_interval: 5s
    ports:
      - 7007:7007/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  drawio:
    image: jgraph/drawio:latest
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
    labels:
      traefik.http.routers.drawio-router.entrypoints: websecure
      traefik.http.routers.drawio-router.rule: Host(`drawio.bob.house`)
      traefik.http.routers.drawio-router.tls: "true"
      traefik.http.services.drawio-service.loadbalancer.server.port: "8080"

  freshrss:
    image: freshrss/freshrss:latest
    environment:
      CRON_MIN: 3,33
      TZ: UTC
    env_file:
      - ~/Configurations/freshrss.env
    labels:
      traefik.http.routers.freshrss-router.entrypoints: websecure
      traefik.http.routers.freshrss-router.rule: Host(`freshrss.bob.house`)
      traefik.http.routers.freshrss-router.tls: "true"
      traefik.http.services.freshrss-service.loadbalancer.server.port: "80"
    logging:
      options:
        max-size: 10m
    volumes:
      - ~/.freshrss/:/var/www/FreshRSS/data:rw
      - ~/.freshrss-extensions/:/var/www/FreshRSS/extensions/:ro

  glances:
    image: nicolargo/glances:latest
    environment:
      GLANCES_OPT: -w
    labels:
      traefik.http.routers.glances-router.entrypoints: websecure
      traefik.http.routers.glances-router.rule: Host(`glances-ransom.bob.house`)
      traefik.http.routers.glances-router.tls: "true"
      traefik.http.services.glances-service.loadbalancer.server.port: "61208"
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/os-release:/etc/os-release:ro

  grafana:
    image: grafana/grafana-oss:latest
    environment:
      GF_ENABLE_GZIP: "true"
      GF_SERVER_ROOT_URL: https://grafana.bob.house
      GF_USERS_ALLOW_SIGN_UP: "false"
    env_file:
      - ~/Configurations/grafana.env
    labels:
      traefik.http.routers.grafana-router.entrypoints: websecure
      traefik.http.routers.grafana-router.rule: Host(`grafana.bob.house`)
      traefik.http.routers.grafana-router.tls: "true"
      traefik.http.services.grafana-service.loadbalancer.server.port: "3000"
    user: "0"
    volumes:
      - ~/.grafana/:/var/lib/grafana/:rw

  httpbin:
    image: mccutchen/go-httpbin:latest
    labels:
      traefik.http.routers.httpbin-router.entrypoints: websecure
      traefik.http.routers.httpbin-router.rule: Host(`httpbin.bob.house`)
      traefik.http.routers.httpbin-router.tls: "true"
      traefik.http.services.httpbin-service.loadbalancer.server.port: "8080"

  it-tools:
    image: ghcr.io/corentinth/it-tools:latest
    labels:
      traefik.http.routers.it-tools-router.entrypoints: websecure
      traefik.http.routers.it-tools-router.rule: Host(`it-tools.bob.house`)
      traefik.http.routers.it-tools-router.tls: "true"
      traefik.http.services.it-tools-service.loadbalancer.server.port: "80"

  karakeep:
    image: ghcr.io/karakeep-app/karakeep:latest
    environment:
      BROWSER_WEB_URL: http://karakeep-chrome:9222
      DATA_DIR: /data
      MEILI_ADDR: http://karakeep-meilisearch:7700
    env_file:
      - ~/Configurations/karakeep.env
    labels:
      traefik.http.routers.karakeep-router.entrypoints: websecure
      traefik.http.routers.karakeep-router.rule: Host(`karakeep.bob.house`)
      traefik.http.routers.karakeep-router.tls: "true"
      traefik.http.services.karakeep-service.loadbalancer.server.port: "3000"
    volumes:
      - ~/.karakeep/data/:/data/:rw

  karakeep-chrome:
    image: gcr.io/zenika-hub/alpine-chrome:latest
    command:
      - --disable-dev-shm-usage
      - --disable-gpu
      - --hide-scrollbars
      - --no-sandbox
      - --remote-debugging-address=0.0.0.0
      - --remote-debugging-port=9222

  karakeep-meilisearch:
    image: getmeili/meilisearch:latest
    environment:
      MEILI_NO_ANALYTICS: "true"
    env_file:
      - ~/Configurations/karakeep.env
    volumes:
      - ~/.karakeep/meilisearch/:/meili_data/:rw

  kopia:
    image: kopia/kopia:latest
    command:
      - server
      - start
      - --disable-csrf-token-checks
      - --insecure
      - --address=0.0.0.0:51515
      - --server-username=a72691ffb1328c15
      - --server-password=54b2ffddfbb10d02b59a5c2b8f9149ff
    env_file:
      - ~/Configurations/kopia.env
    labels:
      traefik.http.routers.kopia-router.entrypoints: websecure
      traefik.http.routers.kopia-router.rule: Host(`kopia-ransom.bob.house`)
      traefik.http.routers.kopia-router.tls: "true"
      traefik.http.services.kopia-service.loadbalancer.server.port: "51515"
    volumes:
      # Mount local folders needed by kopia
      - ~/.kopia/config/:/app/config/:rw
      - ~/.kopia/cache/:/app/cache/:rw
      - ~/.kopia/logs/:/app/logs/:rw
      # Mount local folders to snapshot
      - ~/:/data/:ro
      # Mount repository location
      - /repository/:/repository/:rw

  mediamtx:
    image: bluenviron/mediamtx:latest
    environment:
      MTX_RTSPTRANSPORTS: tcp
      WEBRTCADDITIONALHOSTS: 192.168.1.60
    ports:
      - 8554:8554/tcp # rtsp

  moodist:
    image: ghcr.io/remvze/moodist:latest
    labels:
      traefik.http.routers.moodist-router.entrypoints: websecure
      traefik.http.routers.moodist-router.rule: Host(`moodist.bob.house`)
      traefik.http.routers.moodist-router.tls: "true"
      traefik.http.services.moodist-service.loadbalancer.server.port: "8080"
    logging:
      options:
        max-size: 1g

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    environment:
       GENERIC_TIMEZONE: UTC
       N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "false"
       N8N_PROXY_HOPS: "1"
       TZ: UTC
    labels:
      traefik.http.routers.n8n-router.entrypoints: websecure
      traefik.http.routers.n8n-router.rule: Host(`n8n.bob.house`)
      traefik.http.routers.n8n-router.tls: "true"
      traefik.http.services.n8n-service.loadbalancer.server.port: "5678"
    user: "0"
    volumes:
      - ~/.n8n/:/home/node/.n8n/:rw

  ntfy:
    image: binwiederhier/ntfy:latest
    command:
      - serve
    environment:
      TZ: UTC
    labels:
      traefik.http.routers.ntfy-router.entrypoints: websecure
      traefik.http.routers.ntfy-router.rule: Host(`ntfy.bob.house`)
      traefik.http.routers.ntfy-router.tls: "true"
      traefik.http.services.ntfy-service.loadbalancer.server.port: "80"
    volumes:
      - ~/.ntfy/:/var/cache/ntfy/:rw
      - ./ntfy.yml:/etc/ntfy/server.yml:ro

  nuget:
    image: bagetter/bagetter:latest
    env_file:
      - ~/Configurations/nuget.env
    labels:
      traefik.http.routers.nuget-router.entrypoints: websecure
      traefik.http.routers.nuget-router.rule: Host(`nuget.bob.house`)
      traefik.http.routers.nuget-router.tls: "true"
      traefik.http.services.nuget-service.loadbalancer.server.port: "8080"
    volumes:
      - ~/.bagetter/:/data:rw

  ollama:
    image: ollama/ollama:latest
    volumes:
      - ~/.ollama/:/root/.ollama/:rw

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    environment:
      OLLAMA_BASE_URL: http://ollama:11434
    env_file:
      - ~/Configurations/open-webui.env
    labels:
      traefik.http.routers.open-webui-router.entrypoints: websecure
      traefik.http.routers.open-webui-router.rule: Host(`open-webui.bob.house`)
      traefik.http.routers.open-webui-router.tls: "true"
      traefik.http.services.open-webui-service.loadbalancer.server.port: "8080"
    volumes:
      - ~/.open-webui/:/app/backend/data/:rw

  paperless-ngx:
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    depends_on:
      paperless-ngx-db:
        condition: service_healthy
        required: true
      paperless-ngx-redis:
        condition: service_healthy
        required: true
    env_file:
      - ~/Configurations/paperless-ngx.env
    environment:
      PAPERLESS_BIND_ADDR: 0.0.0.0
      PAPERLESS_DBHOST: paperless-ngx-db
      PAPERLESS_REDIS: redis://paperless-ngx-redis:6379
      PAPERLESS_URL: https://paperless-ngx.bob.house
    healthcheck:
      test: ['CMD', 'curl', '-f', 'http://localhost:8000']
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 10
    labels:
      traefik.http.routers.paperless-ngx-router.entrypoints: websecure
      traefik.http.routers.paperless-ngx-router.rule: Host(`paperless-ngx.bob.house`)
      traefik.http.routers.paperless-ngx-router.tls: "true"
      traefik.http.services.paperless-ngx-service.loadbalancer.server.port: "8000"
    volumes:
      - ~/.paperless-ngx/consume/:/usr/src/paperless/consume/:rw
      - ~/.paperless-ngx/data/:/usr/src/paperless/data/:rw
      - ~/.paperless-ngx/media/:/usr/src/paperless/media/:rw
      - ~/.paperless-ngx/export/:/usr/src/paperless/export/:rw
      - ~/.paperless-ngx/media/:/usr/src/paperless/media/:rw

  paperless-ngx-db:
    image: docker.io/library/postgres:16
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 10
    volumes:
      - ~/.paperless-ngx/db/:/var/lib/postgresql/data/:rw

  paperless-ngx-redis:
    image: docker.io/library/redis:7
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      start_period: 10s
      retries: 10
    volumes:
      - ~/.paperless-ngx/redis/:/data/:rw

  planka:
    image: ghcr.io/plankanban/planka:latest
    depends_on:
      planka-db:
        condition: service_healthy
    environment:
      BASE_URL: https://planka.bob.house
      DATABASE_URL: postgresql://postgres@planka-db/planka
      DEFAULT_ADMIN_EMAIL: demo@demo.demo # Do not remove if you want to prevent this user from being edited/deleted
      DEFAULT_ADMIN_NAME: Demo Demo
      DEFAULT_ADMIN_PASSWORD: demo
      DEFAULT_ADMIN_USERNAME: demo
      OIDC_ISSUER: https://authentik.bob.house/application/o/planka/
      OIDC_SCOPES: openid profile email
      OIDC_ADMIN_ROLES: authentik Admins
    env_file:
      - ~/Configurations/planka.env
    labels:
      traefik.http.routers.planka-router.entrypoints: websecure
      traefik.http.routers.planka-router.rule: Host(`planka.bob.house`)
      traefik.http.routers.planka-router.tls: "true"
      traefik.http.services.planka-service.loadbalancer.server.port: "1337"
    volumes:
      - ~/.planka/user-avatars:/app/public/user-avatars:rw
      - ~/.planka/project-background-images:/app/public/project-background-images:rw
      - ~/.planka/attachments/:/app/private/attachments:rw

  planka-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: planka
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d planka
      timeout: 5s
      interval: 10s
      retries: 5
    volumes:
      - ~/.planka/db:/var/lib/postgresql/data:rw

  portainer:
    image: portainer/agent:latest
    ports:
      - 9001:9001/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - /var/lib/docker/volumes/:/var/lib/docker/volumes/:rw
      - /:/host/:rw

  real-time-streaming:
    build:
      context: ./real-time-streaming/
      dockerfile: ./Dockerfile
    depends_on:
      mediamtx:
        condition: service_started
    volumes:
      - ~/videos/:/videos/:ro

  registry:
    image: registry:latest
    environment:
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data/
    env_file:
      - ~/Configurations/registry.env
    volumes:
      - ~/.registry/data/:/data/:rw
      - ~/.registry/library/:/var/lib/registry/:rw

  registry-ui:
    image: joxit/docker-registry-ui:main
    environment:
      CATALOG_ELEMENTS_LIMIT: "1000"
      CATALOG_MAX_BRANCHES: "1"
      CATALOG_MIN_BRANCHES: "1"
      DELETE_IMAGES: "true"
      NGINX_PROXY_PASS_URL: http://registry:5000
      REGISTRY_SECURED: "false"
      REGISTRY_TITLE: Docker Registry UI
      SHOW_CATALOG_NB_TAGS: "true"
      SHOW_CONTENT_DIGEST: "true"
      SINGLE_REGISTRY: "true"
      TAGLIST_PAGE_SIZE: "100"
    labels:
      traefik.http.routers.registry-router.entrypoints: websecure
      traefik.http.routers.registry-router.rule: Host(`registry.bob.house`)
      traefik.http.routers.registry-router.tls: "true"
      traefik.http.services.registry-service.loadbalancer.server.port: "80"

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    environment:
      APP_TIMEZONE: UTC
      APP_URL: https://speedtest.bob.house
      DB_CONNECTION: sqlite
      SPEEDTEST_SCHEDULE: 0 */3 * * * #every 3rd hour
      SPEEDTEST_SERVERS: 3504, 40628, 48181, 59135
      PRUNE_RESULTS_OLDER_THAN: 28 #28 days
    env_file:
      - ~/Configurations/speedtest-tracker.env
    labels:
      traefik.http.routers.speedtest-router.entrypoints: websecure
      traefik.http.routers.speedtest-router.rule: Host(`speedtest.bob.house`)
      traefik.http.routers.speedtest-router.tls: "true"
      traefik.http.services.speedtest-service.loadbalancer.server.port: "80"
    volumes:
      - ~/.speedtest/:/config/:rw

  traefik:
    image: traefik:latest
    command:
      # - --accesslog=true
      - --api.insecure=true
      - --certificatesresolvers.cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesresolvers.cloudflare.acme.email=mail@bob.codes
      - --certificatesresolvers.cloudflare.acme.storage=/var/certs/acme.json
      - --entrypoints.websecure.address=:443
      # TRACE  DEBUG  INFO  WARN  ERROR  FATAL  PANIC
      - --log.level=INFO
      - --metrics.prometheus=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addrouterslabels=true
      - --metrics.prometheus.addserviceslabels=true
      - --providers.docker
    env_file:
      - ~/Configurations/traefik.env
    labels:
      traefik.http.routers.traefik-router.entrypoints: websecure
      traefik.http.routers.traefik-router.rule: Host(`traefik-ransom.bob.house`)
      traefik.http.routers.traefik-router.tls: "true"
      traefik.http.routers.traefik-router.tls.certresolver: cloudflare
      traefik.http.routers.traefik-router.tls.domains[0].main: bob.house
      traefik.http.routers.traefik-router.tls.domains[0].sans: '*.bob.house'
      traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
    ports:
      - 443:443/tcp
    volumes:
      - certificates-volume:/var/certs/:rw
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  trilium:
    image: triliumnext/notes:latest
    labels:
      traefik.http.routers.trilium-router.entrypoints: websecure
      traefik.http.routers.trilium-router.rule: Host(`trilium.bob.house`)
      traefik.http.routers.trilium-router.tls: "true"
      traefik.http.services.trilium-service.loadbalancer.server.port: "8080"
    volumes:
      - ~/.trilium/:/home/node/trilium-data/:rw

  vikunja:
    image: vikunja/vikunja:latest
    labels:
      traefik.http.routers.vikunja-router.entrypoints: websecure
      traefik.http.routers.vikunja-router.rule: Host(`vikunja.bob.house`)
      traefik.http.routers.vikunja-router.tls: "true"
      traefik.http.services.vikunja-service.loadbalancer.server.port: "3456"
    user: "0"
    volumes:
     - ~/.vikunja/db/:/db/:rw
     - ~/.vikunja/files/:/app/vikunja/files/:rw

  whatsupdocker:
    image: fmartinou/whats-up-docker:latest
    healthcheck:
      test: wget --no-verbose --tries=1 --no-check-certificate --spider http://localhost:3000
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      traefik.http.routers.whatsupdocker-router.entrypoints: websecure
      traefik.http.routers.whatsupdocker-router.rule: Host(`whatsupdocker.bob.house`)
      traefik.http.routers.whatsupdocker-router.tls: "true"
      traefik.http.services.whatsupdocker-service.loadbalancer.server.port: "3000"
      wud.link.template: https://github.com/fmartinou/whats-up-docker/releases/tag/$${major}.$${minor}.$${patch}
      wud.tag.include: ^\d+\.\d+\.\d+$$
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ~/.whatsupdocker/:/store/:rw

secrets:
  id_rsa:
    file: ~/.ssh/id_rsa

volumes:
  certificates-volume:
