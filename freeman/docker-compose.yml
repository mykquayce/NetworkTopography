services:
  authentik-postgresql:
    image: docker.io/library/postgres:16-alpine
    env_file:
      - ~/Configurations/authentik.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    labels:
      traefik.enable: false
    volumes:
      - ~/.authentik/postgres/:/var/lib/postgresql/data/:rw

  authentik-redis:
    image: docker.io/library/redis:alpine
    command: --save 60 1 --loglevel warning
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    labels:
      traefik.enable: false
    volumes:
      - ~/.authentik/redis/:/data/:rw

  authentik-server:
    image: ghcr.io/goauthentik/server:latest
    command: server
    depends_on:
      authentik-postgresql:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
      traefik:
        condition: service_healthy
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
    env_file:
      - ~/Configurations/authentik.env
    labels:
      traefik.http.routers.authentik-router.entrypoints: websecure
      traefik.http.routers.authentik-router.rule: Host(`authentik.bob.house`)
      traefik.http.routers.authentik-router.tls: "true"
      traefik.http.services.authentik-service.loadbalancer.server.port: "9000"
    volumes:
      - ~/.authentik/media/:/media/:rw
      - ~/.authentik/custom-templates/:/templates/:rw

  authentik-worker:
    image: ghcr.io/goauthentik/server:latest
    command: worker
    depends_on:
      authentik-postgresql:
        condition: service_healthy
      authentik-redis:
        condition: service_healthy
    environment:
      AUTHENTIK_REDIS__HOST: authentik-redis
      AUTHENTIK_POSTGRESQL__HOST: authentik-postgresql
    env_file:
      - ~/Configurations/authentik.env
    labels:
      traefik.enable: false
    # `user: root` and the docker socket volume are optional.
    # See more for the docker socket integration here:
    # https://goauthentik.io/docs/outposts/integrations/docker
    # Removing `user: root` also prevents the worker from fixing the permissions
    # on the mounted folders, so when removing this make sure the folders have the correct UID/GID
    # (1000:1000 by default)
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ~/.authentik/media/:/media/:rw
      - ~/.authentik/certs/:/certs/:rw
      - ~/.authentik/custom-templates/:/templates/:rw

  baikal:
    image: ckulka/baikal:nginx
    depends_on:
      traefik:
        condition: service_healthy
    labels:
      traefik.http.routers.baikal-router.entrypoints: websecure
      traefik.http.routers.baikal-router.rule: Host(`baikal.bob.house`)
      traefik.http.routers.baikal-router.tls: "true"
      traefik.http.services.baikal-service.loadbalancer.server.port: "80"
    volumes:
      - ~/.baikal/config/:/var/www/baikal/config/:rw
      - ~/.baikal/data/:/var/www/baikal/Specific/:rw

  dozzle:
    image: amir20/dozzle:latest
    depends_on:
      traefik:
        condition: service_healthy
    environment:
      DOZZLE_HOSTNAME: freeman
      DOZZLE_REMOTE_AGENT: ransom.lan:7007,shaxs.lan:7007,tana.lan:7007
    healthcheck:
      test: ["CMD", "/dozzle", "healthcheck"]
      interval: 5s
      retries: 5
      start_period: 5s
      start_interval: 5s
    labels:
      traefik.http.routers.dozzle-router.entrypoints: websecure
      traefik.http.routers.dozzle-router.rule: Host(`dozzle.bob.house`)
      traefik.http.routers.dozzle-router.tls: "true"
      traefik.http.services.dozzle-service.loadbalancer.server.port: "8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  glance:
    image: glanceapp/glance:latest
    labels:
      traefik.http.routers.glance-router.entrypoints: websecure
      traefik.http.routers.glance-router.rule: Host(`glance.bob.house`)
      traefik.http.routers.glance-router.tls: "true"
      traefik.http.services.glance-service.loadbalancer.server.port: "8080"
    volumes:
      - ./glance.yml:/app/config/glance.yml:ro
      - ~/.glance/:/app/assets/:rw
      - /etc/localtime:/etc/localtime:ro
      - /etc/timezone:/etc/timezone:ro

  glances:
    image: nicolargo/glances:latest
    depends_on:
      traefik:
        condition: service_healthy
    environment:
      GLANCES_OPT: -w
    labels:
      traefik.http.routers.glances-router.entrypoints: websecure
      traefik.http.routers.glances-router.rule: Host(`glances-freeman.bob.house`)
      traefik.http.routers.glances-router.tls: "true"
      traefik.http.services.glances-service.loadbalancer.server.port: "61208"
    pid: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/os-release:/etc/os-release:ro

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    depends_on:
      traefik:
        condition: service_healthy
    labels:
      traefik.http.routers.homeassistant-router.entrypoints: websecure
      traefik.http.routers.homeassistant-router.rule: Host(`homeassistant.bob.house`)
      traefik.http.routers.homeassistant-router.tls: "true"
      traefik.http.services.homeassistant-service.loadbalancer.server.port: "8123"
    volumes:
      - ~/.homeassistant/:/config/:rw
      - ./homeassistant/automations.yaml:/config/automations.yaml:rw
      - ./homeassistant/configuration.yaml:/config/configuration.yaml:rw
      - ./homeassistant/scenes.yaml:/config/scenes.yaml:rw
      - ./homeassistant/scripts.yaml:/config/scripts.yaml:rw
      - ./homeassistant/secrets.yaml:/config/secrets.yaml:rw

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    depends_on:
      traefik:
        condition: service_healthy
    environment:
      HOMEPAGE_ALLOWED_HOSTS: homepage.bob.house
      HOSTNAME: 0.0.0.0
    env_file:
      - ~/Configurations/homepage.env
    extra_hosts:
      - host.docker.internal=host-gateway
    labels:
      traefik.http.routers.homepage-router.entrypoints: websecure
      traefik.http.routers.homepage-router.rule: Host(`homepage.bob.house`)
      traefik.http.routers.homepage-router.tls: "true"
      traefik.http.services.homepage-service.loadbalancer.server.port: "3000"
    volumes:
      - ./homepage/:/app/config/:rw
      - ./homepage/icons/:/app/public/icons/:ro
      - ./homepage/images/:/app/public/images/:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  kopia:
    image: kopia/kopia:latest
    command:
      - server
      - start
      - --disable-csrf-token-checks
      - --insecure
      - --address=0.0.0.0:51515
      - --server-username=a72691ffb1328c15
      - --server-password=54b2ffddfbb10d02b59a5c2b8f9149ff
    env_file:
      - ~/Configurations/kopia.env
    labels:
      traefik.http.routers.kopia-router.entrypoints: websecure
      traefik.http.routers.kopia-router.rule: Host(`kopia-freeman.bob.house`)
      traefik.http.routers.kopia-router.tls: "true"
      traefik.http.services.kopia-service.loadbalancer.server.port: "51515"
    volumes:
      # Mount local folders needed by kopia
      - ~/.kopia/config/:/app/config/:rw
      - ~/.kopia/cache/:/app/cache/:rw
      - ~/.kopia/logs/:/app/logs/:rw
      # Mount local folders to snapshot
      - ~/:/data/:ro
      # Mount repository location
      - /repository/:/repository/:rw

  netalertx:
    image: ghcr.io/jokob-sk/netalertx:latest
    env_file:
      - ~/Configurations/netalertx.env
    environment:
      APP_CONF_OVERRIDE: '{"SCAN_SUBNETS":["192.168.1.0/24 --interface=eno1","192.168.20.0/24 --interface=enp2s0"]}'
      LOADED_PLUGINS: '["APPRISE","ARPSCAN","DHCPSRVS","ICMP","PIHOLE"]'
      PGID: "300"
      PUID: "200"
      PORT: "20211"
      TZ: Etc/UTC
    labels:
      traefik.enable: false
    network_mode: host
    volumes:
      - ~/.netalertx/config/:/app/config/:rw
      - ~/.netalertx/db:/app/db/:rw
      - ~/.netalertx/logs/:/app/log/:rw
      - type: tmpfs
        target: /app/api

  pihole01:
    image: pihole/pihole:latest
    cap_add:
      - SYS_NICE
    depends_on:
      traefik:
        condition: service_healthy
    env_file:
      - ~/Configurations/pihole01.env
    environment:
      FTLCONF_dns_upstreams: 9.9.9.10;149.112.112.10
      FTLCONF_dns_listeningMode: all
      TZ: UTC
    labels:
      traefik.http.routers.pihole01-router.entrypoints: websecure
      traefik.http.routers.pihole01-router.rule: Host(`pihole01.bob.house`)
      traefik.http.routers.pihole01-router.tls: "true"
      traefik.http.services.pihole01-service.loadbalancer.server.port: "80"
    ports:
      - 192.168.1.60:53:53/tcp
      - 192.168.1.60:53:53/udp
    volumes:
      - ~/.pihole01/:/etc/pihole/:rw

  pihole20:
    image: pihole/pihole:latest
    cap_add:
      - SYS_NICE
    depends_on:
      traefik:
        condition: service_healthy
    env_file:
      - ~/Configurations/pihole20.env
    environment:
      FTLCONF_dns_upstreams: 9.9.9.10;149.112.112.10
      FTLCONF_dns_listeningMode: all
      TZ: UTC
    labels:
      traefik.http.routers.pihole20-router.entrypoints: websecure
      traefik.http.routers.pihole20-router.rule: Host(`pihole20.bob.house`)
      traefik.http.routers.pihole20-router.tls: "true"
      traefik.http.services.pihole20-service.loadbalancer.server.port: "80"
    ports:
      - 192.168.20.60:53:53/tcp
      - 192.168.20.60:53:53/udp
    volumes:
      - ~/.pihole20/:/etc/pihole/:rw

  portainer:
    image: portainer/portainer-ce:latest
    depends_on:
      traefik:
        condition: service_healthy
    labels:
      traefik.http.routers.portainer-router.entrypoints: websecure
      traefik.http.routers.portainer-router.rule: Host(`portainer.bob.house`)
      traefik.http.routers.portainer-router.tls: "true"
      traefik.http.services.portainer-service.loadbalancer.server.port: "9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:rw
      - ~/.portainer/:/data/:rw

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    depends_on:
      traefik:
        condition: service_healthy
    extra_hosts:
      - host.docker.internal=host-gateway
    labels:
      traefik.http.routers.prometheus-router.entrypoints: websecure
      traefik.http.routers.prometheus-router.rule: Host(`prometheus.bob.house`)
      traefik.http.routers.prometheus-router.tls: "true"
      traefik.http.services.prometheus-service.loadbalancer.server.port: "9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ~/.prometheus/:/prometheus/:rw

  sshwifty:
    image: niruix/sshwifty:latest
    depends_on:
      traefik:
        condition: service_healthy
    labels:
      traefik.http.routers.sshwifty-router.entrypoints: websecure
      traefik.http.routers.sshwifty-router.rule: Host(`sshwifty.bob.house`)
      traefik.http.routers.sshwifty-router.tls: "true"
      traefik.http.services.sshwifty-service.loadbalancer.server.port: "8182"
    user: root
    volumes:
      - ./sshwifty.conf.json:/root/.config/sshwifty.conf.json:ro
      - ~/.ssh/:/home/root/.ssh/:ro

  traefik:
    image: traefik:latest
    command:
      # - --accesslog=true
      - --api.insecure=true
      - --certificatesresolvers.cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesresolvers.cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
      - --certificatesresolvers.cloudflare.acme.email=mail@bob.codes
      - --certificatesresolvers.cloudflare.acme.storage=/var/certs/acme.json
      - --entrypoints.websecure.address=:443
      # TRACE  DEBUG  INFO  WARN  ERROR  FATAL  PANIC
      - --log.level=INFO
      - --metrics.prometheus=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addrouterslabels=true
      - --metrics.prometheus.addserviceslabels=true
      - --ping
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dynamic_conf/
    env_file:
      - ~/Configurations/traefik.env
    healthcheck:
      test: ['CMD', 'traefik', 'healthcheck', '--ping']
      interval: 10s
      timeout: 10s
      retries: 5
    labels:
      traefik.http.routers.traefik-router.entrypoints: websecure
      traefik.http.routers.traefik-router.rule: Host(`traefik.bob.house`)
      traefik.http.routers.traefik-router.tls: "true"
      traefik.http.routers.traefik-router.tls.certresolver: cloudflare
      traefik.http.routers.traefik-router.tls.domains[0].main: bob.house
      traefik.http.routers.traefik-router.tls.domains[0].sans: '*.bob.house'
      traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
    networks:
      default:
        ipv4_address: 172.18.0.2
    ports:
      - 443:443/tcp
    volumes:
      - certificates-volume:/var/certs/:rw
      - ./traefik.yml:/etc/traefik/dynamic_conf/conf.yml:ro
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  uptimekuma:
    image: louislam/uptime-kuma:latest
    depends_on:
      traefik:
        condition: service_healthy
    labels:
      traefik.http.routers.uptimekuma-router.entrypoints: websecure
      traefik.http.routers.uptimekuma-router.rule: Host(`uptimekuma.bob.house`)
      traefik.http.routers.uptimekuma-router.tls: "true"
      traefik.http.services.uptimekuma-service.loadbalancer.server.port: "3001"
    volumes:
      - ~/.uptimekuma/:/app/data/:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

networks:
  default:
    ipam:
      driver: default
      config:
        - subnet: 172.18.0.0/16
          ip_range: 172.18.5.0/24

volumes:
  certificates-volume:
