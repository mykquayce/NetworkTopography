services:
  asndenier:
    image: eassbhhtgu/asndenier:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    environment:
      DOTNET_ENVIRONMENT: Production

      #ASNNumbers:amazon:0: 7224
      #ASNNumbers:amazon:1: 8987
      #ASNNumbers:amazon:2: 14618
      #ASNNumbers:amazon:3: 16509
      #ASNNumbers:amazon:4: 62785

      ASNNumbers:apple:0: 714
      ASNNumbers:apple:1: 6185

      ASNNumbers:disney:0: 8137
      ASNNumbers:disney:1: 11251
      ASNNumbers:disney:2: 22604
      ASNNumbers:disney:3: 23344
      ASNNumbers:disney:4: 29736
      ASNNumbers:disney:5: 398849

      ASNNumbers:epicgames:0: 4356
      ASNNumbers:epicgames:1: 395701
      ASNNumbers:epicgames:2: 397645

      ASNNumbers:facebook:0: 32934
      ASNNumbers:facebook:1: 54115
      ASNNumbers:facebook:2: 63293

      ASNNumbers:king:0: 62094

      ASNNumbers:netease:0: 45062
      ASNNumbers:netease:1: 131659
      ASNNumbers:netease:2: 137263

      ASNNumbers:netflix:0: 2906
      ASNNumbers:netflix:1: 40027
      ASNNumbers:netflix:2: 55095

      ASNNumbers:sky:0: 5607
      ASNNumbers:sky:1: 7922
      ASNNumbers:sky:2: 39627
      ASNNumbers:sky:3: 41012
      ASNNumbers:sky:4: 207163
      ASNNumbers:sky:5: 212465

      ASNNumbers:tencent:0: 45090

      ASNNumbers:tiktok:0: 138699
      ASNNumbers:tiktok:1: 396986

      #ASNNumbers:twitch:0: 46489

      ASNNumbers:twitter:0: 13414
      ASNNumbers:twitter:1: 35995
      ASNNumbers:twitter:2: 63179
      ASNNumbers:twitter:3: 63194

      ASNNumbers:whatsapp:0: 11917

      Interval:Count: "0.25"
      Interval:Unit: Days

      Router:Host: 192.168.1.10
      Router:Port: "22"
      Router:UserName: root
      Router:PathToPrivateKey: /run/secrets/id_rsa

    secrets:
    - source: id_rsa

  changedetection:
    image: dgtlmoon/changedetection.io:latest
    ports:
      - 5000:5000/tcp
    volumes:
      - ${USERPROFILE}\changedetection-data\:/datastore/:rw

  dozzle:
    image: amir20/dozzle:latest
    command: agent
    ports:
      - 7007:7007/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  freshrss:
    image: freshrss/freshrss:latest
    environment:
      CRON_MIN: 3,33
      TZ: UTC
    logging:
      options:
        max-size: 10m
    ports:
      - 80:80/tcp
    volumes:
      - ~/freshrss-data/:/var/www/FreshRSS/data:rw

  glances:
    image: nicolargo/glances:latest
    environment:
      GLANCES_OPT: -w
    pid: host
    ports:
      - 61208:61208/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /etc/os-release:/etc/os-release:ro

  grafana:
    image: grafana/grafana-oss:latest
    environment:
      GF_ENABLE_GZIP: "true"
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    ports:
      - 3000:3000/tcp
    volumes:
      - ~/grafana-data/:/var/lib/grafana/:rw

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    ports:
      - 8123:8123/tcp
    volumes:
      - ${USERPROFILE}\homeassistant-data\:/config/:rw

  httpbin:
    image: mccutchen/go-httpbin:latest
    ports:
      - 8081:8080/tcp

  identityserver:
    image: eassbhhtgu/identity-server:latest
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      HTTP_PORTS: "80"
      Kestrel:Certificates:Default:KeyPath: /etc/certs/localhost.key
      Kestrel:Certificates:Default:Path: /etc/certs/localhost.crt

      ApiScopes:0:Name: scope1
      Clients:0:AllowedGrantTypes:0: client_credentials
      Clients:0:AllowedScopes:0: scope1
      Clients:0:ClientId: client1
      Clients:0:ClientSecrets:0:Value: WxFhjC5EAnh30M0JIe0Wa58Xb1BYf8kedTTdKUbbd9Y=
    ports:
      - 81:80/tcp
    secrets:
      - source: localhost_crt
        target: /etc/certs/localhost.crt
      - source: localhost_key
        target: /etc/certs/localhost.key

  it-tools:
    image: ghcr.io/corentinth/it-tools:latest
    ports:
      - 82:80/tcp

  moodist:
    image: ghcr.io/remvze/moodist:latest
    logging:
      options:
        max-size: 1g
    ports:
      - 8082:8080/tcp

  n8n:
    image: docker.n8n.io/n8nio/n8n:latest
    environment:
       GENERIC_TIMEZONE: UTC
       N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS: "false"
       N8N_PROXY_HOPS: "1"
       TZ: UTC
    ports:
      - 5678:5678/tcp
    volumes:
      - ~/.n8n/:/home/node/.n8n/:rw

  ntfy:
    image: binwiederhier/ntfy:latest
    command:
      - serve
    environment:
      TZ: UTC
    ports:
      - 27346:80/tcp
    volumes:
      - ${USERPROFILE}\ntfy-data\cache\:/var/cache/ntfy/:rw
      - .\ntfy.yml:/etc/ntfy/server.yml:ro

  nuget:
    image: bagetter/bagetter:latest
    environment:
      ApiKey: ${NuGetServerApiKey:-8e7b324ee43b689f77c2f95b099fd6f5}
    ports:
      - 8083:8080/tcp
    volumes:
      - ${USERPROFILE}\bagetter-data:/data:rw

  planka:
    image: ghcr.io/plankanban/planka:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    environment:
      BASE_URL: https://planka.bob.house
      DATABASE_URL: postgresql://postgres@planka-db/planka
      SECRET_KEY: ${PLANKA_DB_PASSWORD:-c1ce607f5d65cbb3c68092651627426b}
      DEFAULT_ADMIN_EMAIL: demo@demo.demo # Do not remove if you want to prevent this user from being edited/deleted
      DEFAULT_ADMIN_NAME: Demo Demo
      DEFAULT_ADMIN_PASSWORD: demo
      DEFAULT_ADMIN_USERNAME: demo
    ports:
      - 1337:1337/tcp
    volumes:
      - ${USERPROFILE}\planka-data\user-avatars:/app/public/user-avatars:rw
      - ${USERPROFILE}\planka-data\project-background-images:/app/public/project-background-images:rw
      - ${USERPROFILE}\planka-data\attachments:/app/private/attachments:rw

  planka-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: planka
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d planka
      timeout: 5s
      interval: 10s
      retries: 5
    volumes:
      - ${USERPROFILE}\planka-data\db:/var/lib/postgresql/data:rw

  registry:
    image: registry:latest
    environment:
      REGISTRY_HTTP_SECRET: ${DOCKER_REGISTRY_HTTP_SECRET:-b3879bfc703da640b9e74cc001d05a4dz}
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data/
    volumes:
      - ${USERPROFILE}\registry-data\data\:/data/:rw
      - ${USERPROFILE}\registry-data\library\:/var/lib/registry/:rw

  registry-ui:
    image: joxit/docker-registry-ui:main
    environment:
      CATALOG_ELEMENTS_LIMIT: "1000"
      CATALOG_MAX_BRANCHES: "1"
      CATALOG_MIN_BRANCHES: "1"
      DELETE_IMAGES: "true"
      NGINX_PROXY_PASS_URL: http://registry:5000
      REGISTRY_SECURED: "false"
      REGISTRY_TITLE: Docker Registry UI
      SHOW_CATALOG_NB_TAGS: "true"
      SHOW_CONTENT_DIGEST: "true"
      SINGLE_REGISTRY: "true"
      TAGLIST_PAGE_SIZE: "100"
    ports:
      - 83:80/tcp

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    environment:
      APP_KEY: base64:F2MCnwpty7/bHkZ1bqWEM8IAD05w0nNxWQQa0cBVwfE=
      APP_TIMEZONE: UTC
      APP_URL: https://speedtest.bob.house
      DB_CONNECTION: sqlite
      SPEEDTEST_SCHEDULE: 0 0,3,6,9,12,15,18,21 * * * #every 3rd hour
      SPEEDTEST_SERVERS: 3504, 40628, 48181, 59135
      PRUNE_RESULTS_OLDER_THAN: 28 #28 days
    ports:
      - 84:80/tcp
    volumes:
      - ${USERPROFILE}\speedtest-data\:/config/:rw

  trilium:
    image: triliumnext/notes:latest
    ports:
      - 8084:8080/tcp
    volumes:
      - ${USERPROFILE}\trilium-data\:/home/node/trilium-data/:rw

  uptimekuma:
    image: louislam/uptime-kuma:latest
    ports:
      - 3001:3001/tcp
    volumes:
      - ${USERPROFILE}\uptimekuma-data\:/app/data/:rw
      - /var/run/docker.sock:/var/run/docker.sock:ro

  vikunja:
    image: vikunja/vikunja:latest
    ports:
      - 3456:3456/tcp
    volumes:
     - ${userprofile}\vikunja-data\db\:/db/:rw
     - ${userprofile}\vikunja-data\files\:/app/vikunja/files/:rw

  whatsupdocker:
    image: fmartinou/whats-up-docker:latest
    healthcheck:
      test: wget --no-verbose --tries=1 --no-check-certificate --spider http://localhost:3000
      interval: 10s
      timeout: 10s
      retries: 3
      start_period: 10s
    labels:
      wud.link.template: https://github.com/fmartinou/whats-up-docker/releases/tag/$${major}.$${minor}.$${patch}
      wud.tag.include: ^\d+\.\d+\.\d+$$
    ports:
      - 3002:3000/tcp
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${USERPROFILE}\whatsupdocker-data\:/store/:rw

secrets:
  id_rsa:
    file: ${USERPROFILE}\.ssh\id_rsa
  localhost_crt:
    file: ${USERPROFILE}\.aspnet\https\server.crt
  localhost_key:
    file: ${USERPROFILE}\.aspnet\https\server.key
