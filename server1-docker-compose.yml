services:
  asndenier:
    image: eassbhhtgu/asndenier:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    environment:
      DOTNET_ENVIRONMENT: Production

      #ASNNumbers:amazon:0: 7224
      #ASNNumbers:amazon:1: 8987
      #ASNNumbers:amazon:2: 14618
      #ASNNumbers:amazon:3: 16509
      #ASNNumbers:amazon:4: 62785

      ASNNumbers:apple:0: 714
      ASNNumbers:apple:1: 6185

      ASNNumbers:disney:0: 8137
      ASNNumbers:disney:1: 11251
      ASNNumbers:disney:2: 22604
      ASNNumbers:disney:3: 23344
      ASNNumbers:disney:4: 29736
      ASNNumbers:disney:5: 398849

      ASNNumbers:epicgames:0: 4356
      ASNNumbers:epicgames:1: 395701
      ASNNumbers:epicgames:2: 397645

      ASNNumbers:facebook:0: 32934
      ASNNumbers:facebook:1: 54115
      ASNNumbers:facebook:2: 63293

      ASNNumbers:king:0: 62094

      ASNNumbers:netease:0: 45062
      ASNNumbers:netease:1: 131659
      ASNNumbers:netease:2: 137263

      ASNNumbers:netflix:0: 2906
      ASNNumbers:netflix:1: 40027
      ASNNumbers:netflix:2: 55095

      ASNNumbers:sky:0: 5607
      ASNNumbers:sky:1: 7922
      ASNNumbers:sky:2: 39627
      ASNNumbers:sky:3: 41012
      ASNNumbers:sky:4: 207163
      ASNNumbers:sky:5: 212465

      ASNNumbers:tencent:0: 45090

      ASNNumbers:tiktok:0: 138699
      ASNNumbers:tiktok:1: 396986

      #ASNNumbers:twitch:0: 46489

      ASNNumbers:twitter:0: 13414
      ASNNumbers:twitter:1: 35995
      ASNNumbers:twitter:2: 63179
      ASNNumbers:twitter:3: 63194

      ASNNumbers:whatsapp:0: 11917

      Interval:Count: "0.25"
      Interval:Unit: Days

      Router:Host: 192.168.1.10
      Router:Port: "22"
      Router:UserName: root
      Router:PathToPrivateKey: /run/secrets/id_rsa

    secrets:
    - source: id_rsa

  certificates:
    image: httpd:alpine
    labels:
      traefik.http.routers.apache-router.rule: Host(`certificates`)
      traefik.http.services.apache-service.loadbalancer.server.port: "80"
    secrets:
      - source: crl_crt
        target: /usr/local/apache2/htdocs/crl.crt

  grafana:
    image: grafana/grafana-oss:latest
    environment:
      GF_ENABLE_GZIP: "true"
      GF_SECURITY_ADMIN_PASSWORD: admin
      GF_USERS_ALLOW_SIGN_UP: "false"
    labels:
      traefik.http.routers.grafana-router.entrypoints: websecure
      traefik.http.routers.grafana-router.rule: Host(`grafana`)
      traefik.http.routers.grafana-router.tls: "true"
      traefik.http.services.grafana-service.loadbalancer.server.port: "3000"
    volumes:
      - ${USERPROFILE}\grafana-data\:/var/lib/grafana/:rw

  homeassistant:
    image: ghcr.io/home-assistant/home-assistant:stable
    labels:
      traefik.http.routers.homeassistant-router.entrypoints: websecure
      traefik.http.routers.homeassistant-router.rule: Host(`homeassistant`)
      traefik.http.routers.homeassistant-router.tls: "true"
      traefik.http.services.homeassistant-service.loadbalancer.server.port: "8123"
    volumes:
      - ${USERPROFILE}\homeassistant\:/config/:rw

  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    labels:
      traefik.http.routers.homepage-router.entrypoints: websecure
      traefik.http.routers.homepage-router.rule: Host(`homepage`)
      traefik.http.routers.homepage-router.tls: "true"
      traefik.http.services.homepage-service.loadbalancer.server.port: "3000"
    volumes:
      - .\homepage\:/app/config/:rw
      - .\homepage\icons\:/app/public/icons/:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  httpbin:
    image: mccutchen/go-httpbin:latest
    labels:
      traefik.http.routers.httpbin-router.entrypoints: websecure
      traefik.http.routers.httpbin-router.rule: Host(`httpbin`)
      traefik.http.routers.httpbin-router.tls: "true"
      traefik.http.services.httpbin-service.loadbalancer.server.port: "8080"

  identityserver:
    image: eassbhhtgu/identity-server:latest
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      HTTP_PORTS: "80"
      Kestrel:Certificates:Default:KeyPath: /etc/certs/localhost.key
      Kestrel:Certificates:Default:Path: /etc/certs/localhost.crt

      ApiScopes:0:Name: scope1
      Clients:0:AllowedGrantTypes:0: client_credentials
      Clients:0:AllowedScopes:0: scope1
      Clients:0:ClientId: client1
      Clients:0:ClientSecrets:0:Value: WxFhjC5EAnh30M0JIe0Wa58Xb1BYf8kedTTdKUbbd9Y=
    labels:
      traefik.http.routers.identityserver-router.entrypoints: websecure
      traefik.http.routers.identityserver-router.rule: Host(`identityserver`)
      traefik.http.routers.identityserver-router.tls: "true"
      traefik.http.services.identityserver-service.loadbalancer.server.port: "80"
    secrets:
      - source: localhost_crt
        target: /etc/certs/localhost.crt
      - source: localhost_key
        target: /etc/certs/localhost.key

  networkdiscovery:
    image: eassbhhtgu/networkdiscoveryapi:latest
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      Aliases:keylight: 3c6a9d14d765
      Aliases:lightstrip: 3c6a9d187071
      Aliases:vr front: 28ee52eb0aa4
      Aliases:vr rear: 003192e1a474
      Aliases:philipshue: ecb5fa18e324
      Aliases:philipshuebridge: ecb5fa18e324
      Aliases:globalcache: 000c1e059cad
      Aliases:irblaster: 000c1e059cad
      Router:Host: 192.168.1.10
      Router:PathToPrivateKey: /run/secrets/id_rsa
      Router:Port: 22
      Router:Username: root
    labels:
      traefik.http.routers.networkdiscovery-router.entrypoints: websecure
      traefik.http.routers.networkdiscovery-router.rule: Host(`networkdiscovery`)
      traefik.http.routers.networkdiscovery-router.tls: "true"
      traefik.http.services.networkdiscovery-service.loadbalancer.server.port: "8080"
    secrets:
    - source: id_rsa

  nuget:
    image: bagetter/bagetter:latest
    environment:
      ApiKey: ${NuGetServerApiKey:-8e7b324ee43b689f77c2f95b099fd6f5}
    labels:
      traefik.http.routers.nuget-router.entrypoints: websecure
      traefik.http.routers.nuget-router.rule: Host(`baget`) || Host(`nuget`)
      traefik.http.routers.nuget-router.tls: "true"
      traefik.http.services.nuget-service.loadbalancer.server.port: "8080"
    volumes:
      - ${USERPROFILE}\bagetter-data:/data:rw

  planka:
    image: ghcr.io/plankanban/planka:latest
    deploy:
      restart_policy:
        condition: on-failure
        delay: 10s
        max_attempts: 10
        window: 60s
    environment:
      BASE_URL: https://planka
      DATABASE_URL: postgresql://postgres@planka-db/planka
      SECRET_KEY: ${PLANKA_DB_PASSWORD:-c1ce607f5d65cbb3c68092651627426b}
      DEFAULT_ADMIN_EMAIL: demo@demo.demo # Do not remove if you want to prevent this user from being edited/deleted
      DEFAULT_ADMIN_NAME: Demo Demo
      DEFAULT_ADMIN_PASSWORD: demo
      DEFAULT_ADMIN_USERNAME: demo
    labels:
      traefik.http.routers.planka-router.entrypoints: websecure
      traefik.http.routers.planka-router.rule: Host(`planka`)
      traefik.http.routers.planka-router.tls: "true"
      traefik.http.services.planka-service.loadbalancer.server.port: "1337"
    volumes:
      - ${USERPROFILE}\planka-data\user-avatars:/app/public/user-avatars:rw
      - ${USERPROFILE}\planka-data\project-background-images:/app/public/project-background-images:rw
      - ${USERPROFILE}\planka-data\attachments:/app/private/attachments:rw

  planka-db:
    image: postgres:14-alpine
    environment:
      POSTGRES_DB: planka
      POSTGRES_HOST_AUTH_METHOD: trust
    healthcheck:
      test:
        - CMD-SHELL
        - pg_isready -U postgres -d planka
      timeout: 5s
      interval: 10s
      retries: 5
    volumes:
      - ${USERPROFILE}\planka-data\db:/var/lib/postgresql/data:rw

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus/prometheus.yml
    labels:
      traefik.http.routers.prometheus-router.entrypoints: websecure
      traefik.http.routers.prometheus-router.rule: Host(`prometheus`)
      traefik.http.routers.prometheus-router.tls: "true"
      traefik.http.services.prometheus-service.loadbalancer.server.port: "9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  registry:
    image: registry:latest
    environment:
      REGISTRY_HTTP_SECRET: ${DOCKER_REGISTRY_HTTP_SECRET:-b3879bfc703da640b9e74cc001d05a4dz}
      REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY: /data/
    labels:
      traefik.http.routers.registry-router.entrypoints: websecure
      traefik.http.routers.registry-router.rule: Host(`registry`) || Host(`registry.local`)
      traefik.http.routers.registry-router.tls: "true"
      traefik.http.services.registry-service.loadbalancer.server.port: "5000"
    volumes:
      - ${USERPROFILE}\registry-data\data\:/data/:rw
      - ${USERPROFILE}\registry-data\library\:/var/lib/registry/:rw

  speedtest-tracker:
    image: lscr.io/linuxserver/speedtest-tracker:latest
    environment:
      APP_KEY: base64:F2MCnwpty7/bHkZ1bqWEM8IAD05w0nNxWQQa0cBVwfE=
      APP_TIMEZONE: UTC
      APP_URL: https://speedtest
      DB_CONNECTION: sqlite
      SPEEDTEST_SCHEDULE: 0 0,3,6,9,12,15,18,21 * * * #every 3rd hour
      SPEEDTEST_SERVERS: 3504, 40628, 48181, 59135
      PRUNE_RESULTS_OLDER_THAN: 28 #28 days
    labels:
      traefik.http.routers.speedtest-router.rule: Host(`speedtest`)
      traefik.http.routers.speedtest-router.tls: "true"
      traefik.http.services.speedtest-service.loadbalancer.server.port: "80"
    volumes:
      - ${USERPROFILE}\speedtest-data\:/config/:rw

  tplink:
    image: eassbhhtgu/tplinkrelayapi:latest
    entrypoint: bash -c "/usr/sbin/update-ca-certificates && dotnet TPLinkRelayApi.Api.dll"
    environment:
      ASPNETCORE_ENVIRONMENT: Production
      EndPoints:NetworkDiscovery: http://networkdiscovery:8080/
    labels:
      traefik.http.routers.tplink-router.entrypoints: websecure
      traefik.http.routers.tplink-router.rule: Host(`tplink`)
      traefik.http.routers.tplink-router.tls: "true"
      traefik.http.services.tplink-service.loadbalancer.server.port: "8080"
    secrets:
      - source: ca_crt
        target: /usr/local/share/ca-certificates/ca.crt

  traefik:
    image: traefik:latest
    command:
      # - --accesslog=true
      - --api.insecure=true
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      # TRACE  DEBUG  INFO  WARN  ERROR  FATAL  PANIC
      - --log.level=INFO
      - --metrics.prometheus=true
      - --metrics.prometheus.addentrypointslabels=true
      - --metrics.prometheus.addrouterslabels=true
      - --metrics.prometheus.addserviceslabels=true
      - --providers.docker
      - --providers.file.directory=/etc/traefik/dynamic_conf/
    labels:
      traefik.http.routers.traefik-router.entrypoints: websecure
      traefik.http.routers.traefik-router.rule: Host(`traefik`)
      traefik.http.routers.traefik-router.tls: "true"
      traefik.http.services.traefik-service.loadbalancer.server.port: "8080"
    ports:
      - 80:80/tcp
      - 443:443/tcp
    secrets:
      - source: localhost_crt
        target: /etc/certs/localhost.crt
      - source: localhost_key
        target: /etc/certs/localhost.key
    volumes:
      - ./traefik.yml:/etc/traefik/dynamic_conf/conf.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock

secrets:
  id_rsa:
    file: ${USERPROFILE}\.ssh\id_rsa
  ca_crt:
    file: ${USERPROFILE}\.aspnet\https\ca.crt
  crl_crt:
    file: ${USERPROFILE}\.aspnet\https\crl.crt
  localhost_crt:
    file: ${USERPROFILE}\.aspnet\https\server1.crt
  localhost_key:
    file: ${USERPROFILE}\.aspnet\https\server1.key
